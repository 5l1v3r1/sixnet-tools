class SUP_message(object):
    """SIXNET Universal Protocol message
    #field order/size (bytes)
    #   lead        1
    #   length      1
    #   dest        1 or 2
    #   src         1 or 2
    #   session     1
    #   sequence    1
    #   command     1
    #   data        variable
    #   crc         1"""
    #TODO:


    commands = {
                0   :   "NOP",
                1   :   "ACK",
                2   :   "NAK",
                3   :   "VERS",
                4   :   "NIO",
                10  :   "GETD",
                11  :   "GETB",
                12  :   "GETA",
                13  :   "GETS",
                14  :   "PUTD",
                15  :   "PUTB",
                16  :   "PUTA",
                17  :   "SETD",
                18  :   "CLRD",
                24  :   "SCLOCK",
                25  :   "GCLOCK",
                32  :   "IOXCHG"
                }

    #message for a NOP command
    #NOP = "7d0009603f603f001500000f".decode("hex")
    NOP = "7d07fff0c00000d70f".decode("hex")
          #"7d0cfff0c0000c80000000081d0f"
    #turn_shit_on = "7d0dffff00050e01000008000011d0f".decode("hex")
    #NOP = '}\x07\xff\xff\x00\x05\x00\xd7\x0f'

    def __init__(self, message):
        self.message = message
        self.breakdown(message)

    def breakdown(self, message):
        """Breaks down the message to its component fields"""
        self.lead       = message[0:2]
        
        self.length     = int(message[2:4],16) #convert the hex value stored as a string to an int
        self.dest       = message[4:6]
        self.src        = message[6:8]
        self.session    = message[8:10]
        self.sequence   = message[10:12]
        self.command    = self.commands[int(message[12:14],16)]
        self.data       = message[14:(len(message)-2)] #convert the hex value stored as a string to an int
        self.crc        = message[-2:] #last 2 characters